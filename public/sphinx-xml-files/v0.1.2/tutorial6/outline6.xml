<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.15.2 -->
<document source="/Users/hsor001/Projects/Webstorm/test-sphinx/docs/tutorials/tutorial6/outline6.rst">
    <target refid="tutorial6"></target>
    <section ids="tutorial-6-working-with-multiple-components tutorial6" names="tutorial\ 6:\ working\ with\ multiple\ components tutorial6">
        <title>Tutorial 6: Working with multiple components</title>
        <paragraph>Getting started:  If you’re reading this it’s presumed that you’re already
            comfortable with the serlialisation, manipulation, and debugging functionality
            available in the libCellML library, as well as using the API to create, debug
            and validate your model.  This tutorial will build on work done in
            <reference internal="True" refuri="../tutorial5/outline5#tutorial5"><inline classes="std std-ref">Tutorial 5</inline></reference>: if you are starting from here you can find
            the files which were created in that tutorial in the
            <literal classes="code">resources</literal> folder.</paragraph>
        <paragraph>By the end of this tutorial you will be able to:</paragraph>
        <bullet_list bullet="-">
            <list_item>
                <paragraph>create a CellML2.0 model which includes encapsulations and more than one
                    <literal classes="code">Component</literal></paragraph>
            </list_item>
            <list_item>
                <paragraph>connect <literal classes="code">Components</literal> to one another by mapping equivalent
                    <literal classes="code">Variables</literal></paragraph>
            </list_item>
        </bullet_list>
        <section ids="overview" names="overview">
            <title>Overview</title>
            <paragraph>In <reference internal="True" refuri="../tutorial5/outline5#tutorial5"><inline classes="std std-ref">Tutorial 5</inline></reference> we created a component representing an ion
                channel.  The channel is controlled by a number of gates in series, whose
                open or closed state and the transition between them is controlled by voltage:
                hence, a “voltage-controlled ion gate”.  In this tutorial we will explore how
                a channel such as that made in Tutorial 5 can include another level of
                control: the rate constants (<math>\alpha_n</math> and <math>\beta_n</math>) used earlier
                are now functions of voltage themselves.  This is the situation in a
                potassium channel, the theory of which is described in
                <reference internal="True" refuri="../../theory/theory_potassiumchannel#theory-potassiumchannel"><inline classes="std std-ref">A model of a potassium channel</inline></reference>.</paragraph>
            <paragraph>We will also show how an <emphasis>environment</emphasis> or <emphasis>boundary conditions</emphasis> component
                can be used to ensure that the independent variables in the model are shared
                consistently between components.  Storing the initial and independent variables
                in an external component also makes it easier to change them without needing
                to edit the model proper.</paragraph>
        </section>
        <section ids="c-instructions" names="c++\ instructions">
            <title>C++ instructions</title>
            <paragraph>Please see the <reference internal="True" refuri="tutorial6_cpp#tutorial6-cpp"><inline classes="std std-ref">C++ instructions</inline></reference> page.</paragraph>
            <paragraph>Resources:</paragraph>
            <block_quote>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph><download_reference filename="a26156a8cdf44a9c9b4a004bbf9d13b4/CMakeLists.txt" refdoc="tutorials/tutorial6/outline6" refdomain="" refexplicit="False" reftarget="CMakeLists.txt" reftype="download" refwarn="False"><literal classes="xref download">CMakeLists.txt</literal></download_reference> The CMake file for building this tutorial</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><download_reference filename="9daa8e1d70ede2b1338eb020da9e610b/tutorial6.cpp" refdoc="tutorials/tutorial6/outline6" refdomain="" refexplicit="False" reftarget="tutorial6.cpp" reftype="download" refwarn="False"><literal classes="xref download">tutorial6.cpp</literal></download_reference> Either the skeleton code, or ..</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><download_reference filename="70ba15f2ec32c7f3a19f77ac5684cb90/tutorial6_complete.cpp" refdoc="tutorials/tutorial6/outline6" refdomain="" refexplicit="False" reftarget="tutorial6_complete.cpp" reftype="download" refwarn="False"><literal classes="xref download">tutorial6_complete.cpp</literal></download_reference> the completed tutorial code</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><download_reference filename="71c8df5698e64a2755cabb11a12fa0c6/tutorial_utilities.h" refdoc="tutorials/tutorial6/outline6" refdomain="" refexplicit="False" reftarget="../utilities/tutorial_utilities.h" reftype="download" refwarn="False"><literal classes="xref download">../utilities/tutorial_utilities.h</literal></download_reference> and
                            <download_reference filename="750d88a87c4217ca633669952f6c8046/tutorial_utilities.cpp" refdoc="tutorials/tutorial6/outline6" refdomain="" refexplicit="False" reftarget="../utilities/tutorial_utilities.cpp" reftype="download" refwarn="False"><literal classes="xref download">../utilities/tutorial_utilities.cpp</literal></download_reference>  Utility functions for
                            use in the tutorials.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>If you did not complete Tutorial 5 you can download the file created there:
                            <download_reference filename="2096e345a466836d0aaa1feb84038a31/tutorial5_IonChannelModel.cellml" refdoc="tutorials/tutorial6/outline6" refdomain="" refexplicit="False" reftarget="../resources/tutorial5_IonChannelModel.cellml" reftype="download" refwarn="False"><literal classes="xref download">../resources/tutorial5_IonChannelModel.cellml</literal></download_reference></paragraph>
                    </list_item>
                </bullet_list>
            </block_quote>
        </section>
        <section ids="python-instructions" names="python\ instructions">
            <title>Python instructions</title>
            <paragraph>Please see the <reference internal="True" refuri="tutorial6_py#tutorial6-py"><inline classes="std std-ref">Python instructions</inline></reference> page.</paragraph>
            <paragraph>Resources:</paragraph>
            <block_quote>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph><download_reference filename="0978492d5f16c02eef68a0accb2f9a40/tutorial6.py" refdoc="tutorials/tutorial6/outline6" refdomain="" refexplicit="False" reftarget="tutorial6.py" reftype="download" refwarn="False"><literal classes="xref download">tutorial6.py</literal></download_reference> Either the skeleton code, or ..</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><download_reference filename="54012672e48fa25390e0f01873687b0b/tutorial6_complete.py" refdoc="tutorials/tutorial6/outline6" refdomain="" refexplicit="False" reftarget="tutorial6_complete.py" reftype="download" refwarn="False"><literal classes="xref download">tutorial6_complete.py</literal></download_reference> the completed tutorial code</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><download_reference filename="be32dacbc29f5ddf6465b6d009305a8b/tutorial_utilities.py" refdoc="tutorials/tutorial6/outline6" refdomain="" refexplicit="False" reftarget="../utilities/tutorial_utilities.py" reftype="download" refwarn="False"><literal classes="xref download">../utilities/tutorial_utilities.py</literal></download_reference>  Utility functions for
                            use in the tutorials.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>If you did not complete Tutorial 5 you can download the file created there:
                            <download_reference filename="2096e345a466836d0aaa1feb84038a31/tutorial5_IonChannelModel.cellml" refdoc="tutorials/tutorial6/outline6" refdomain="" refexplicit="False" reftarget="../resources/tutorial5_IonChannelModel.cellml" reftype="download" refwarn="False"><literal classes="xref download">../resources/tutorial5_IonChannelModel.cellml</literal></download_reference></paragraph>
                    </list_item>
                </bullet_list>
            </block_quote>
        </section>
    </section>
</document>
