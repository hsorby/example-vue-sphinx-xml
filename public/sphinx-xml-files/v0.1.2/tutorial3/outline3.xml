<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.15.2 -->
<document source="/Users/hsor001/Projects/Webstorm/test-sphinx/docs/tutorials/tutorial3/outline3.rst">
    <target refid="tutorial3"></target>
    <section ids="tutorial-3-create-a-model-and-generate-code-using-the-api tutorial3" names="tutorial\ 3:\ create\ a\ model\ and\ generate\ code\ using\ the\ api tutorial3">
        <title>Tutorial 3: Create a model and generate code using the API</title>
        <paragraph>By the time you have worked through Tutorial 3 you will be able to:</paragraph>
        <bullet_list bullet="-">
            <list_item>
                <paragraph>Create a new model and its child entities from scratch using the API;</paragraph>
            </list_item>
            <list_item>
                <paragraph>Write your own MathML syntax to construct governing equations;</paragraph>
            </list_item>
            <list_item>
                <paragraph>Define custom combinations of built-in units;</paragraph>
            </list_item>
            <list_item>
                <paragraph>Define your own custom units independent from the built-in units; and</paragraph>
            </list_item>
            <list_item>
                <paragraph>Use the <literal classes="code">Generator</literal> functionality to transform the model into other
                    languages.</paragraph>
            </list_item>
        </bullet_list>
        <paragraph>This tutorial assumes that you are comfortable with:</paragraph>
        <bullet_list bullet="-">
            <list_item>
                <paragraph>Accessing and adjusting names of items inside a model hierarchy
                    (see <reference internal="True" refuri="../tutorial2/outline2#tutorial2"><inline classes="std std-ref">Tutorial 2</inline></reference>);</paragraph>
            </list_item>
            <list_item>
                <paragraph>Creating a validator and using it to check a model for errors
                    (see <reference internal="True" refuri="../tutorial2/outline2#tutorial2"><inline classes="std std-ref">Tutorial 2</inline></reference>);</paragraph>
            </list_item>
            <list_item>
                <paragraph>Accessing the errors produced by a validator and using them to correct
                    the model (see <reference internal="True" refuri="../tutorial2/outline2#tutorial2"><inline classes="std std-ref">Tutorial 2</inline></reference>); and</paragraph>
            </list_item>
            <list_item>
                <paragraph>Serialising and printing a model to a CellML2 file (see
                    <reference internal="True" refuri="../tutorial1/outline1#tutorial1"><inline classes="std std-ref">Tutorial 1</inline></reference>).</paragraph>
            </list_item>
        </bullet_list>
        <section ids="overview" names="overview">
            <title>Overview</title>
            <paragraph>During this tutorial you will create a simple model representing the population dynamics of two species - one a predator (sharks), and the other their prey (fish).
                The population of fish can only grow when they are not being constantly eaten by sharks, and the rate at which is grows will
                depend on how many fish are available for breeding.
                At the same time, the population of sharks will depend on how much food is available in the fish population.
                In maths this relationship can be written:</paragraph>
            <math_block docname="tutorials/tutorial3/outline3" label="True" nowrap="False" number="True" xml:space="preserve">\frac{dy_s}{dt} =f(sharks, fishes, time) = a y_s + b y_s y_f

\frac{dy_f}{dt} =f(sharks, fishes, time) = c y_f + d y_s y_f</math_block>
            <paragraph>where the constants <math>(a, b, c, d)=(-0.8, 0.3, 1.2, -0.6)</math> and we’ll use the initial condtions of <math>y_s(t=0)=1.0</math> and
                <math>y_f(t=0)=2.0</math>.</paragraph>
            <paragraph>In order to model these unusual populations you’ll need to create your own custom units, to enter and check these governing equations in MathML syntax, and to use the <literal classes="code">Generator</literal> functionality to create files able to be solved using a numerical integrator in C or Python.</paragraph>
        </section>
        <section ids="c-instructions" names="c++\ instructions">
            <title>C++ instructions</title>
            <paragraph>Please see the <reference internal="True" refuri="tutorial3_cpp#tutorial3-cpp"><inline classes="std std-ref">C++ instructions</inline></reference> page.
                You will need to download:</paragraph>
            <block_quote>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph><download_reference filename="8e552cfaaf187c985680b6b3c5e7ef46/CMakeLists.txt" refdoc="tutorials/tutorial3/outline3" refdomain="" refexplicit="False" reftarget="CMakeLists.txt" reftype="download" refwarn="False"><literal classes="xref download">CMakeLists.txt</literal></download_reference> The CMake file for building this tutorial;</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><download_reference filename="bb0b7240eb32c2dee08557a0e13a919e/tutorial3.cpp" refdoc="tutorials/tutorial3/outline3" refdomain="" refexplicit="False" reftarget="tutorial3.cpp" reftype="download" refwarn="False"><literal classes="xref download">tutorial3.cpp</literal></download_reference> The skeleton code, or <download_reference filename="5b20da741ccbfe1dd650e25fde54649d/tutorial3_complete.cpp" refdoc="tutorials/tutorial3/outline3" refdomain="" refexplicit="False" reftarget="tutorial3_complete.cpp" reftype="download" refwarn="False"><literal classes="xref download">tutorial3_complete.cpp</literal></download_reference> the completed tutorial code; and</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><download_reference filename="16d7c9c29bc3d404223cea525d5479af/tutorial_utilities.h" refdoc="tutorials/tutorial3/outline3" refdomain="" refexplicit="False" reftarget="../utilities/tutorial_utilities.h" reftype="download" refwarn="False"><literal classes="xref download">../utilities/tutorial_utilities.h</literal></download_reference> and <download_reference filename="cb7d9781b8af0c923d501ec9ccf83ae6/tutorial_utilities.cpp" refdoc="tutorials/tutorial3/outline3" refdomain="" refexplicit="False" reftarget="../utilities/tutorial_utilities.cpp" reftype="download" refwarn="False"><literal classes="xref download">../utilities/tutorial_utilities.cpp</literal></download_reference> Utility functions for use in the tutorials.</paragraph>
                    </list_item>
                </bullet_list>
            </block_quote>
        </section>
        <section ids="python-instructions" names="python\ instructions">
            <title>Python instructions</title>
            <paragraph>Please see the <reference internal="True" refuri="tutorial3_py#tutorial3-py"><inline classes="std std-ref">Python instructions</inline></reference> page.
                You will need to download:</paragraph>
            <block_quote>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph><download_reference filename="31d34d5b6c4e980be32c278cb054f40e/tutorial3.py" refdoc="tutorials/tutorial3/outline3" refdomain="" refexplicit="False" reftarget="tutorial3.py" reftype="download" refwarn="False"><literal classes="xref download">tutorial3.py</literal></download_reference> Either the skeleton code, or <download_reference filename="9d787b885b55c361cc7ab95fe2a26858/tutorial3_complete.py" refdoc="tutorials/tutorial3/outline3" refdomain="" refexplicit="False" reftarget="tutorial3_complete.py" reftype="download" refwarn="False"><literal classes="xref download">tutorial3_complete.py</literal></download_reference> the completed tutorial code; and</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><download_reference filename="6188b30d40cbd65a16830ed94180de75/tutorial_utilities.py" refdoc="tutorials/tutorial3/outline3" refdomain="" refexplicit="False" reftarget="../utilities/tutorial_utilities.py" reftype="download" refwarn="False"><literal classes="xref download">../utilities/tutorial_utilities.py</literal></download_reference>  Utility functions for use in the tutorials.</paragraph>
                    </list_item>
                </bullet_list>
            </block_quote>
        </section>
    </section>
</document>
