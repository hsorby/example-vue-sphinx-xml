<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.15.2 -->
<document source="/Users/hsor001/Projects/Webstorm/test-sphinx/docs/tutorials/tutorial1/tutorial1_read_a_file.rst">
    <section ids="tutorial-1-read-a-model-file" names="tutorial\ 1:\ read\ a\ model\ file">
        <title>Tutorial 1: Read a model file</title>
        <paragraph>CellML files contain all the information defining a model, as well as
            annotation data regarding the source or provenance of any items that are
            included.  At the end of this tutorial you will be able to open and read
            an existing CellML file and load its contents into a model.</paragraph>
        <paragraph><strong>Get started:</strong> Download tutorial resources from here ??</paragraph>
        <paragraph>The most basic form of a useful* CellML model has four parts
            or <reference internal="True" refuri="../glossary#term-entity"><inline classes="xref std std-term">entities</inline></reference>:</paragraph>
        <bullet_list bullet="-">
            <list_item>
                <paragraph>the model itself</paragraph>
            </list_item>
            <list_item>
                <paragraph>a component (there can be more than one, but that will come later)</paragraph>
            </list_item>
            <list_item>
                <paragraph>some variables</paragraph>
            </list_item>
            <list_item>
                <paragraph>some mathematics describing how the variables interact</paragraph>
            </list_item>
        </bullet_list>
        <paragraph>* other collections of information may be considered “valid” in that
            do not disobey the specification, but they are not actually useful
            for anything, so we don’t deal with them here.</paragraph>
        <paragraph>The model is a hierarchical structure, as in the diagram below. ??</paragraph>
        <paragraph>?? diagram showing model hierarchy</paragraph>
        <paragraph>Each of these entities has a corresponding object type in the libcellml
            library, named respectively <literal>Model</literal>, <literal>Component</literal>, <literal>Variable</literal>. The
            mathematics is a little different, but we’ll get to that shortly.</paragraph>
        <paragraph>CellML files are not really intended for humans to read, but in simple ones such as this example, we’r smart enough to figure it out.  Here’s what we’ll be reading:</paragraph>
    </section>
</document>
